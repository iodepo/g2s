PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
prefix prov: <http://www.w3.org/ns/prov#>
PREFIX schema: <https://schema.org/>
PREFIX geosparql: <http://www.opengis.net/ont/geosparql#>

SELECT DISTINCT (?s as ?id) ?g ?type ?name ?description ?contributor ?keywords
    ?variableMeasured ?provider
    ?contenturl ?courseName ?url
    ?location ?iritype ?wkt ?geom ?lat ?long ?place_name
    ?temporalCoverage ?datePublished ?dateModified
    ?sameAs ?citation ?license ?version ?includedInDataCatalog ?memberOf
    ?parentOrganization ?knowsAbout ?affiliation ?category
    ?vehicleConfiguration ?vehicleSpecialUsage
    ?jobTitle ?knowsLanguage ?educationalCredentialAwarded ?author
    ?hasCourseInstance ?location ?areaServed ?startDate ?endDate

WHERE {
{
        graph ?g {
            ?s rdf:type schema:CreativeWork .
            ?s schema:name ?name .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:variableMeasured ?variableMeasurediri .
            ?variableMeasurediri schema:name ?variablemeasured .
			BIND("Dataset" AS ?type)
        }
    } UNION  {
        graph ?g {
            ?s rdf:type schema:CreativeWork .
	     ?s schema:provider ?provideriri .
             ?provideriri schema:name ?provider .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:CreativeWork .
            ?s schema:description ?description .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            BIND(<https://schema.org/Dataset> AS ?iritype)
            ?s rdf:type schema:CreativeWork .
            ?s schema:contributor ?contributor .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:keywords ?keywords .
            FILTER (!isIRI(?keywords) && !isBlank(?keywords))
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:distribution ?distribution .
            ?distribution schema:contentUrl ?contenturl .
            FILTER (!isIRI(?contenturl) && !isBlank(?contenturl))
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:keywords ?irikeywords .
            ?irikeywords a schema:DefinedTerm .
            ?irikeywords schema:name ?keywords .
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:DataCatalog .
            ?s schema:keywords ?keywords .
            FILTER (!isIRI(?keywords) && !isBlank(?keywords))
			BIND("DataCatalog" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:DataCatalog .
            ?s schema:keywords ?irikeywords .
            ?irikeywords a schema:DefinedTerm .
            ?irikeywords schema:name ?keywords .
			BIND("DataCatalog" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:CreativeWork .
            ?s schema:url ?url .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:CreativeWork .
            ?s schema:location ?location .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:CreativeWork .
            ?s schema:address ?address .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Course .
            ?s schema:hasCourseInstance ?hasCourseInstance .
            ?hasCourseInstance schema:name ?courseName
			BIND("Course" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:spatialCoverage ?sc .
            ?sc a schema:Place .
            ?sc schema:name ?place_name .
            FILTER (!isIRI(?place_name)) .
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:spatialCoverage ?sc .
            ?sc a schema:Place .
            ?sc schema:latitude ?lat .
            ?sc schema:longitude ?long .
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s schema:spatialCoverage ?sc .
            ?sc a schema:Place .
            ?sc schema:geo ?geo .
            ?geo a ?geotype .
            ?geo ?geompred ?geom .
            VALUES ?geompred { schema:box schema:polygon }
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:Dataset .
            ?s geosparql:hasGeometry ?hasgeom .
            ?hasgeom geosparql:asWKT ?wkt
			BIND("Dataset" AS ?type)
        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:DataCatalog .
            ?s schema:spatialCoverage ?sc .
            ?sc a schema:Place .
            ?sc schema:latitude ?lat .
            ?sc schema:longitude ?long .
			BIND("DataCatalog" AS ?type)

        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:DataCatalog .
            ?s schema:spatialCoverage ?sc .
            ?sc a schema:Place .
            ?sc schema:geo ?geo .
            ?geo a ?geotype .
            ?geo ?geompred ?geom .
            VALUES ?geompred { schema:box schema:polygon }
            #FILTER (!isIRI(?geom))
			BIND("DataCatalog" AS ?type)

        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:DataCatalog .
            ?s geosparql:hasGeometry ?hasgeom .
            ?hasgeom geosparql:asWKT ?wkt
			BIND("DataCatalog" AS ?type)

        }
    } UNION {
        graph ?g {
            ?s rdf:type schema:CreativeWork .
            ?s schema:temporalCoverage ?temporalCoverage .
            BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
        }
    } UNION {
        SELECT ?s ?type ?dateModified
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:dateModified ?dateModified
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?datePublished
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:datePublished ?datePublished .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?sameAs
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:sameAs ?sameAs .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?license
        WHERE {
            graph ?g {
                ?s rdf:type schema:Dataset .
                ?s schema:license ?license .
			    BIND("Dataset" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?citation
        WHERE {
            graph ?g {
                ?s rdf:type schema:Dataset .
                ?s schema:citation ?citation .
			    BIND("Dataset" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?version
        WHERE {
            graph ?g {
                ?s rdf:type schema:Dataset .
                ?s schema:version ?version .
			    BIND("Dataset" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?includedInDataCatalog
        WHERE {
            graph ?g {
                ?s rdf:type schema:DataCatalog .
                ?s schema:includedInDataCatalog ?includedInDataCatalog .
			    BIND("DataCatalog" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?type ?memberOf
        WHERE {
            graph ?g {
                ?s rdf:type schema:Person .
                ?s schema:memberOf ?memberOf .
			    BIND("Person" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?parentOrganization
        WHERE {
            graph ?g {
                ?s rdf:type schema:Organization .
                ?s schema:parentOrganization ?parentOrganization .
			    BIND("Organization" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?knowsAbout
        WHERE {
            graph ?g {
                ?s rdf:type schema:Person .
                ?s schema:knowsAbout ?knowsAboutIRI .
                ?knowsAboutIRI  schema:description ?knowsAbout
			    BIND("Person" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?affiliation
        WHERE {
            graph ?g {
                ?s rdf:type schema:Person .
                ?s schema:affiliation ?affiliation .
			    BIND("Person" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?category
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:category ?category .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?vehicleConfiguration
        WHERE {
            graph ?g {
                ?s rdf:type schema:Vehicle .
                ?s schema:vehicleConfiguration ?vehicleConfiguration .
			    BIND("Vehicle" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?vehicleSpecialUsage
        WHERE {
            graph ?g {
                ?s rdf:type schema:Vehicle .
                ?s schema:vehicleSpecialUsage ?vehicleSpecialUsage .
			    BIND("Vehicle" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?jobTitle
        WHERE {
            graph ?g {
                ?s rdf:type schema:Person .
                ?s schema:jobTitle ?jobTitle .
			    BIND("Person" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?knowsLanguage
        WHERE {
            graph ?g {
                ?s rdf:type schema:Person .
                ?s schema:knowsLanguage ?knowsLanguagenode .
                ?knowsLanguagenode schema:name ?knowsLanguage .
			    BIND("Person" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?educationalCredentialAwarded
        WHERE {
            graph ?g {
                ?s rdf:type schema:Person .
                ?s schema:educationalCredentialAwarded ?educationalCredentialAwarded .
			    BIND("Person" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?author
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:author ?authornode .
                ?authornode schema:name ?author .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?hasCourseInstance
        WHERE {
            graph ?g {
                ?s rdf:type schema:Course .
                ?s schema:hasCourseInstance ?hasCourseInstance .
			    BIND("Course" AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?areaServed
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:areaServed ?areaServed .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?startDate
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:startDate ?startDate .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    } UNION {
        SELECT ?s ?endDate
        WHERE {
            graph ?g {
                ?s rdf:type schema:CreativeWork .
                ?s schema:endDate ?endDate .
                BIND(REPLACE(STR(?iritype), "https://schema.org/", "") AS ?type)
            }
        }
    }
}
